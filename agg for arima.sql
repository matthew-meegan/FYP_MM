USE DATABASE CTRF_PROD;
USE SCHEMA CTRF_PROD.DATA_QUALITY;

CREATE OR REPLACE TABLE SAMPLE_AGG_1 AS
WITH ranked AS (
  SELECT
    USAGE_DATE,
    SESSION_HOUR,
    TOTAL_MB_CHARGED,
    TOTAL_SESSIONS,
    ROW_NUMBER() OVER (PARTITION BY USAGE_DATE, SESSION_HOUR ORDER BY RANDOM()) AS rn,
    COUNT(*) OVER (PARTITION BY USAGE_DATE, SESSION_HOUR) AS cnt
  FROM CTRF_PROD.DATA_QUALITY.SAMPLE_DATA
  WHERE SESSION_HOUR != -1
)
SELECT
  USAGE_DATE,
  SESSION_HOUR,
  SUM(TOTAL_MB_CHARGED) AS SUM_MB,
  SUM(TOTAL_SESSIONS) AS SUM_SESSIONS
FROM ranked
WHERE rn <= CEIL(cnt * 0.01)
GROUP BY USAGE_DATE, SESSION_HOUR;


CREATE OR REPLACE TABLE SAMPLE_AGG_5 AS
WITH ranked AS (
  SELECT
    USAGE_DATE,
    SESSION_HOUR,
    TOTAL_MB_CHARGED,
    TOTAL_SESSIONS,
    ROW_NUMBER() OVER (PARTITION BY USAGE_DATE, SESSION_HOUR ORDER BY RANDOM()) AS rn,
    COUNT(*) OVER (PARTITION BY USAGE_DATE, SESSION_HOUR) AS cnt
  FROM CTRF_PROD.DATA_QUALITY.SAMPLE_DATA
  WHERE SESSION_HOUR != -1
)
SELECT
  USAGE_DATE,
  SESSION_HOUR,
  SUM(TOTAL_MB_CHARGED) AS SUM_MB,
  SUM(TOTAL_SESSIONS) AS SUM_SESSIONS
FROM ranked
WHERE rn <= CEIL(cnt * 0.05)
GROUP BY USAGE_DATE, SESSION_HOUR;

CREATE OR REPLACE TABLE SAMPLE_AGG_15 AS
WITH ranked AS (
  SELECT
    USAGE_DATE,
    SESSION_HOUR,
    TOTAL_MB_CHARGED,
    TOTAL_SESSIONS,
    ROW_NUMBER() OVER (PARTITION BY USAGE_DATE, SESSION_HOUR ORDER BY RANDOM()) AS rn,
    COUNT(*) OVER (PARTITION BY USAGE_DATE, SESSION_HOUR) AS cnt
  FROM CTRF_PROD.DATA_QUALITY.SAMPLE_DATA
  WHERE SESSION_HOUR != -1
)
SELECT
  USAGE_DATE,
  SESSION_HOUR,
  SUM(TOTAL_MB_CHARGED) AS SUM_MB,
  SUM(TOTAL_SESSIONS) AS SUM_SESSIONS
FROM ranked
WHERE rn <= CEIL(cnt * 0.15)
GROUP BY USAGE_DATE, SESSION_HOUR;

CREATE OR REPLACE TABLE SAMPLE_AGG_30 AS
WITH ranked AS (
  SELECT
    USAGE_DATE,
    SESSION_HOUR,
    TOTAL_MB_CHARGED,
    TOTAL_SESSIONS,
    ROW_NUMBER() OVER (PARTITION BY USAGE_DATE, SESSION_HOUR ORDER BY RANDOM()) AS rn,
    COUNT(*) OVER (PARTITION BY USAGE_DATE, SESSION_HOUR) AS cnt
  FROM CTRF_PROD.DATA_QUALITY.SAMPLE_DATA
  WHERE SESSION_HOUR != -1
)
SELECT
  USAGE_DATE,
  SESSION_HOUR,
  SUM(TOTAL_MB_CHARGED) AS SUM_MB,
  SUM(TOTAL_SESSIONS) AS SUM_SESSIONS
FROM ranked
WHERE rn <= CEIL(cnt * 0.30)
GROUP BY USAGE_DATE, SESSION_HOUR;

CREATE OR REPLACE TABLE SAMPLE_AGG_50 AS
WITH ranked AS (
  SELECT
    USAGE_DATE,
    SESSION_HOUR,
    TOTAL_MB_CHARGED,
    TOTAL_SESSIONS,
    ROW_NUMBER() OVER (PARTITION BY USAGE_DATE, SESSION_HOUR ORDER BY RANDOM()) AS rn,
    COUNT(*) OVER (PARTITION BY USAGE_DATE, SESSION_HOUR) AS cnt
  FROM CTRF_PROD.DATA_QUALITY.SAMPLE_DATA
  WHERE SESSION_HOUR != -1
)
SELECT
  USAGE_DATE,
  SESSION_HOUR,
  SUM(TOTAL_MB_CHARGED) AS SUM_MB,
  SUM(TOTAL_SESSIONS) AS SUM_SESSIONS
FROM ranked
WHERE rn <= CEIL(cnt * 0.50)
GROUP BY USAGE_DATE, SESSION_HOUR;


CREATE OR REPLACE TABLE SAMPLE_AGG_80 AS
WITH ranked AS (
  SELECT
    USAGE_DATE,
    SESSION_HOUR,
    TOTAL_MB_CHARGED,
    TOTAL_SESSIONS,
    ROW_NUMBER() OVER (PARTITION BY USAGE_DATE, SESSION_HOUR ORDER BY RANDOM()) AS rn,
    COUNT(*) OVER (PARTITION BY USAGE_DATE, SESSION_HOUR) AS cnt
  FROM CTRF_PROD.DATA_QUALITY.SAMPLE_DATA
  WHERE SESSION_HOUR != -1
)
SELECT
  USAGE_DATE,
  SESSION_HOUR,
  SUM(TOTAL_MB_CHARGED) AS SUM_MB,
  SUM(TOTAL_SESSIONS) AS SUM_SESSIONS
FROM ranked
WHERE rn <= CEIL(cnt * 0.80)
GROUP BY USAGE_DATE, SESSION_HOUR;
